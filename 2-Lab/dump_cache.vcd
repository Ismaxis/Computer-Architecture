$date
	Tue Nov 29 00:18:28 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cache $end
$var wire 15 ! mem_address [14:0] $end
$var wire 2 " mem_command [1:0] $end
$var wire 16 # mem_data [15:0] $end
$var wire 16 $ mem_data_buff [15:0] $end
$var reg 1 % clk $end
$var reg 19 & cpu_address_buff [18:0] $end
$var reg 4 ' cpu_offset_buff [3:0] $end
$var reg 15 ( mem_address_buff [14:0] $end
$var reg 2 ) mem_command_buff [1:0] $end
$var reg 128 * mem_line_buff [127:0] $end
$var reg 1 + reset $end
$scope module m1 $end
$var wire 15 , address [14:0] $end
$var wire 1 % clk $end
$var wire 2 - command [1:0] $end
$var wire 16 . data [15:0] $end
$var wire 1 + reset $end
$var reg 2 / command_buff [1:0] $end
$var reg 16 0 data_buff [15:0] $end
$var reg 4 1 rwPosition [3:0] $end
$var integer 32 2 SEED [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 3 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 4 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 5 i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope task delay $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 6
b0 5
b0 4
b0 3
b110111000011110110 2
bx 1
bx 0
bx /
bx .
b0 -
b0 ,
0+
b0 *
b0 )
b0 (
bx '
bx &
0%
bx $
bz #
bz "
bz !
$end
#1
b0 1
b0 /
b0 $
b0 .
b0 0
b1000000000000000 3
b1011111001111001111000011110110 2
1+
1%
#2
0+
0%
#3
1%
#4
b10 )
b10 -
b1001000001 (
b1001000001 ,
b1 '
b10010000010001 &
0%
#5
b10 1
b1010010000101100 $
b1010010000101100 .
b1010010000101100 0
b10000 4
1%
#6
b1010010000101100 *
0%
#7
b100 1
b1111111111111111 $
b1111111111111111 .
b1111111111111111 0
b10000 4
1%
#8
b11111111111111111010010000101100 *
b1 6
0%
#9
b110 1
b10000 4
1%
#10
b111111111111111111111111111111111010010000101100 *
b10 6
0%
#11
b1000 1
b10000 4
1%
#12
b1111111111111111111111111111111111111111111111111010010000101100 *
b11 6
0%
#13
b1010 1
b10000 4
1%
#14
b11111111111111111111111111111111111111111111111111111111111111111010010000101100 *
b100 6
0%
#15
b1100 1
b10000 4
1%
#16
b111111111111111111111111111111111111111111111111111111111111111111111111111111111010010000101100 *
b101 6
0%
#17
b1110 1
b10000 4
1%
#18
b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111010010000101100 *
b110 6
0%
#19
b0 1
b0 $
b0 .
b0 0
b10000 4
1%
#20
b111 6
0%
#21
b10 1
b1010010000101100 $
b1010010000101100 .
b1010010000101100 0
b10000 4
1%
#22
b1000 6
0%
