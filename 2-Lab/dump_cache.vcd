$date
	Wed Nov 30 23:49:13 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 3 ! cpu_command [2:0] $end
$var wire 16 " cpu_data [15:0] $end
$var wire 16 # mem_data [15:0] $end
$var wire 2 $ mem_command [1:0] $end
$var wire 15 % mem_address [14:0] $end
$var wire 15 & cpu_address [14:0] $end
$var reg 1 ' clk $end
$var reg 1 ( reset $end
$scope module cache $end
$var wire 1 ' clk $end
$var wire 3 ) cpu_command [2:0] $end
$var wire 16 * cpu_data [15:0] $end
$var wire 15 + mem_address [14:0] $end
$var wire 2 , mem_command [1:0] $end
$var wire 16 - mem_data [15:0] $end
$var wire 1 ( reset $end
$var wire 15 . cpu_address [14:0] $end
$var reg 3 / cpu_command_buff [2:0] $end
$var reg 16 0 cpu_data_bus_buff [15:0] $end
$var reg 32 1 cpu_data_to_write [31:0] $end
$var reg 4 2 cpu_offset_buff [3:0] $end
$var reg 5 3 cpu_set_buff [4:0] $end
$var reg 10 4 cpu_tag_buff [9:0] $end
$var reg 3 5 cur_cpu_command [2:0] $end
$var reg 1 6 index_in_set $end
$var reg 15 7 mem_address_buff [14:0] $end
$var reg 2 8 mem_command_buff [1:0] $end
$var reg 16 9 mem_data_buff [15:0] $end
$var reg 128 : mem_line_buff [127:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 ; i [31:0] $end
$upscope $end
$scope task delay $end
$upscope $end
$scope task read_cpu_address $end
$upscope $end
$scope task read_from_storage $end
$upscope $end
$scope task replace_from_MM $end
$scope begin $ivl_for_loop0 $end
$var integer 32 < i [31:0] $end
$upscope $end
$upscope $end
$scope task store $end
$upscope $end
$scope task update_flags $end
$upscope $end
$scope task write_to_MM $end
$scope begin $ivl_for_loop1 $end
$var integer 32 = i [31:0] $end
$upscope $end
$upscope $end
$scope task write_to_storage $end
$upscope $end
$upscope $end
$scope module cpu $end
$var wire 15 > address [14:0] $end
$var wire 1 ' clk $end
$var wire 3 ? command [2:0] $end
$var wire 16 @ data [15:0] $end
$var reg 15 A address_bus_buff [14:0] $end
$var reg 19 B cpu_address_buff [18:0] $end
$var reg 3 C cpu_command_buff [2:0] $end
$var reg 16 D data_buff [15:0] $end
$var reg 32 E data_to_write [31:0] $end
$var reg 32 F local_storage [31:0] $end
$var reg 16 G recieved_data [15:0] $end
$scope task READ $end
$upscope $end
$scope task READ16 $end
$upscope $end
$scope task READ32 $end
$upscope $end
$scope task READ8 $end
$upscope $end
$scope task WRITE $end
$upscope $end
$scope task WRITE16 $end
$upscope $end
$scope task WRITE32 $end
$upscope $end
$scope task WRITE8 $end
$upscope $end
$scope task delay $end
$upscope $end
$scope task eviction_test $end
$upscope $end
$scope task read_write_test $end
$upscope $end
$scope task send_address $end
$upscope $end
$scope task wait_for_resp $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 15 H address [14:0] $end
$var wire 1 ' clk $end
$var wire 2 I command [1:0] $end
$var wire 16 J data [15:0] $end
$var wire 1 ( reset $end
$var reg 16 K data_buff [15:0] $end
$var reg 4 L rwPosition [3:0] $end
$var integer 32 M SEED [31:0] $end
$scope begin $ivl_for_loop3 $end
$var integer 32 N i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop4 $end
$var integer 32 O i [31:0] $end
$upscope $end
$scope task delay $end
$upscope $end
$upscope $end
$scope task delay $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 O
b0 N
b110111000011110110 M
bx L
bx K
bx J
bz I
bx H
b0 G
bx F
bx E
bz D
bz C
bx B
bz A
bz @
bz ?
bz >
b0 =
b0 <
b0 ;
b0 :
bz 9
bz 8
bx 7
x6
b0 5
bx 4
bx 3
bx 2
bx 1
bz 0
bz /
bz .
bx -
bz ,
bx +
bz *
bz )
0(
x'
bz &
bx %
bz $
bx #
bz "
bz !
$end
#1
b0 L
bz #
bz -
bz J
bz K
b1100011 N
b110000110000011110001000101 M
b100000 ;
1(
#2
b1110 &
b1110 .
b1110 >
b1110 A
b11 !
b11 )
b11 ?
b11 C
b11100000 B
0'
0(
#3
b1110 3
b0 4
b1110 %
b1110 +
b1110 H
b1110 7
b11 5
1'
#4
b10 $
b10 ,
b10 I
b10 8
b0 2
b0 &
b0 .
b0 >
b0 A
0'
#5
b10 L
b1001110001110100 #
b1001110001110100 -
b1001110001110100 J
b1001110001110100 K
1'
#6
b1001110001110100 :
bz !
bz )
bz ?
bz C
0'
#7
b100 L
b1111111111111111 #
b1111111111111111 -
b1111111111111111 J
b1111111111111111 K
1'
#8
b11111111111111111001110001110100 :
b1 <
0'
#9
b110 L
1'
#10
b111111111111111111111111111111111001110001110100 :
b10 <
0'
#11
b1000 L
1'
#12
b1111111111111111111111111111111111111111111111111001110001110100 :
b11 <
0'
#13
b1010 L
1'
#14
b11111111111111111111111111111111111111111111111111111111111111111001110001110100 :
b100 <
0'
#15
b1100 L
1'
#16
b111111111111111111111111111111111111111111111111111111111111111111111111111111111001110001110100 :
b101 <
0'
#17
b1110 L
1'
#18
b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001110001110100 :
b110 <
0'
#19
b0 L
b0 #
b0 -
b0 J
b0 K
1'
#20
b111 <
0'
#21
b10 L
b1001110001110100 #
b1001110001110100 -
b1001110001110100 J
b1001110001110100 K
1'
#22
b111 !
b111 )
b111 ?
b111 /
b1001110001110100 "
b1001110001110100 *
b1001110001110100 @
b1001110001110100 0
06
bz $
bz ,
bz I
bz 8
b1000 <
0'
#23
bz #
bz -
bz J
bz K
b0 L
1'
#24
b1110 &
b1110 .
b1110 >
b1110 A
bx1001110001110100 F
b1001110001110100 G
0'
#25
1'
#26
b1111111111111111 "
b1111111111111111 *
b1111111111111111 @
b1111111111111111 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#27
1'
#28
bz 5
bz 0
bz /
b1110 &
b1110 .
b1110 >
b1110 A
b111100001111 "
b111100001111 *
b111100001111 @
b111100001111 D
b111 C
b11110000111100000000111100001111 E
b11111111111111111001110001110100 F
b1111111111111111 G
0'
#29
bx0000111100001111 1
b111 5
1'
#30
b111 /
b11110000111100000000111100001111 1
b0 2
b0 &
b0 .
b0 >
b0 A
b1111000011110000 "
b1111000011110000 *
b1111000011110000 @
b1111000011110000 D
0'
#31
1'
#32
bz 5
bz /
b1110 &
b1110 .
b1110 >
b1110 A
b11 !
b11 )
b11 ?
bz "
bz *
bz @
bz D
b11 C
0'
#33
b11 5
1'
#34
bx11 !
bx11 )
bx11 ?
b111 /
b111100001111 "
b111100001111 *
b111100001111 @
b111100001111 0
b0 &
b0 .
b0 >
b0 A
0'
#35
1'
#36
b1110 &
b1110 .
b1110 >
b1110 A
b11111111111111110000111100001111 F
b111100001111 G
b111 !
b111 )
b111 ?
bz C
0'
#37
1'
#38
b1111000011110000 "
b1111000011110000 *
b1111000011110000 @
b1111000011110000 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#39
1'
#40
bz 5
bz "
bz *
bz @
bz 0
bz /
b101110 &
b101110 .
b101110 >
b101110 A
b11 !
b11 )
b11 ?
b11 C
b1011100000 B
b11110000111100000000111100001111 F
b1111000011110000 G
0'
#41
b1 4
b101110 %
b101110 +
b101110 H
b101110 7
b11 5
1'
#42
b10 $
b10 ,
b10 I
b10 8
b0 2
b0 &
b0 .
b0 >
b0 A
0'
#43
b10 L
b1001111111010111 #
b1001111111010111 -
b1001111111010111 J
b1001111111010111 K
1'
#44
b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001111111010111 :
b0 <
bz !
bz )
bz ?
bz C
0'
#45
b100 L
b1111111111111111 #
b1111111111111111 -
b1111111111111111 J
b1111111111111111 K
1'
#46
b1 <
0'
#47
b110 L
1'
#48
b10 <
0'
#49
b1000 L
1'
#50
b11 <
0'
#51
b1010 L
1'
#52
b100 <
0'
#53
b1100 L
1'
#54
b101 <
0'
#55
b1110 L
1'
#56
b110 <
0'
#57
b0 L
b0 #
b0 -
b0 J
b0 K
1'
#58
b111 <
0'
#59
b10 L
b1001111111010111 #
b1001111111010111 -
b1001111111010111 J
b1001111111010111 K
1'
#60
b111 !
b111 )
b111 ?
b111 /
b1001111111010111 "
b1001111111010111 *
b1001111111010111 @
b1001111111010111 0
16
bz $
bz ,
bz I
bz 8
b1000 <
0'
#61
bz #
bz -
bz J
bz K
b0 L
1'
#62
b101110 &
b101110 .
b101110 >
b101110 A
b11110000111100001001111111010111 F
b1001111111010111 G
0'
#63
1'
#64
b1111111111111111 "
b1111111111111111 *
b1111111111111111 @
b1111111111111111 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#65
1'
#66
bz 5
bz 0
bz /
b101110 &
b101110 .
b101110 >
b101110 A
b111111110000 "
b111111110000 *
b111111110000 @
b111111110000 D
b111 C
b11111111111111110000111111110000 E
b11111111111111111001111111010111 F
b1111111111111111 G
0'
#67
b11110000111100000000111111110000 1
b111 5
1'
#68
b111 /
b11111111111111110000111111110000 1
b0 2
b0 &
b0 .
b0 >
b0 A
b1111111111111111 "
b1111111111111111 *
b1111111111111111 @
b1111111111111111 D
0'
#69
1'
#70
bz 5
bz /
b101110 &
b101110 .
b101110 >
b101110 A
b11 !
b11 )
b11 ?
bz "
bz *
bz @
bz D
b11 C
0'
#71
b11 5
1'
#72
bx11 !
bx11 )
bx11 ?
b111 /
b111111110000 "
b111111110000 *
b111111110000 @
b111111110000 0
b0 &
b0 .
b0 >
b0 A
0'
#73
1'
#74
b101110 &
b101110 .
b101110 >
b101110 A
b11111111111111110000111111110000 F
b111111110000 G
b111 !
b111 )
b111 ?
bz C
0'
#75
1'
#76
b1111111111111111 "
b1111111111111111 *
b1111111111111111 @
b1111111111111111 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#77
1'
#78
bz 5
bz "
bz *
bz @
bz 0
bz /
b1001110 &
b1001110 .
b1001110 >
b1001110 A
b11 !
b11 )
b11 ?
b11 C
b10011100000 B
b1111111111111111 G
0'
#79
b10 4
b1001110 %
b1001110 +
b1001110 H
b1001110 7
b11 5
1'
#80
b10 $
b10 ,
b10 I
b10 8
b0 2
b0 &
b0 .
b0 >
b0 A
0'
#81
b10 L
b110110000111 #
b110110000111 -
b110110000111 J
b110110000111 K
1'
#82
b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000110110000111 :
b0 <
bz !
bz )
bz ?
bz C
0'
#83
b100 L
b0 #
b0 -
b0 J
b0 K
1'
#84
b1111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000110110000111 :
b1 <
0'
#85
b110 L
1'
#86
b1111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000110110000111 :
b10 <
0'
#87
b1000 L
1'
#88
b1111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000110110000111 :
b11 <
0'
#89
b1010 L
1'
#90
b1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000110110000111 :
b100 <
0'
#91
b1100 L
1'
#92
b1111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110000111 :
b101 <
0'
#93
b1110 L
1'
#94
b110110000111 :
b110 <
0'
#95
b0 L
1'
#96
b111 <
0'
#97
b10 L
b110110000111 #
b110110000111 -
b110110000111 J
b110110000111 K
1'
#98
b1110 %
b1110 +
b1110 H
b1110 7
b11 $
b11 ,
b11 I
b11 8
b1000 <
0'
#99
bz #
bz -
bz J
bz K
1'
#100
b111100001111 #
b111100001111 -
b111100001111 J
b111100001111 9
0'
#101
1'
#102
b1 O
b1111000011110000 #
b1111000011110000 -
b1111000011110000 J
b1111000011110000 9
b1 =
0'
#103
1'
#104
b10 O
b1111111111111111 #
b1111111111111111 -
b1111111111111111 J
b1111111111111111 9
b10 =
0'
#105
1'
#106
b11 O
b11 =
0'
#107
1'
#108
b100 O
b100 =
0'
#109
1'
#110
b101 O
b101 =
0'
#111
1'
#112
b110 O
b110 =
0'
#113
1'
#114
b111 O
b0 #
b0 -
b0 J
b0 9
b111 =
0'
#115
1'
#116
b1000 O
b111 !
b111 )
b111 ?
b111 /
b110110000111 "
b110110000111 *
b110110000111 @
b110110000111 0
06
bz #
bz -
bz J
bz 9
b0 $
b0 ,
b0 I
b0 8
b1000 =
0'
#117
b0 L
1'
#118
b1001110 &
b1001110 .
b1001110 >
b1001110 A
b11111111111111110000110110000111 F
b110110000111 G
0'
#119
1'
#120
b0 "
b0 *
b0 @
b0 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#121
1'
#122
bz 5
bz 0
bz /
b1001110 &
b1001110 .
b1001110 >
b1001110 A
b1001100011111111 "
b1001100011111111 *
b1001100011111111 @
b1001100011111111 D
b111 C
b11111111000110011001100011111111 E
b110110000111 F
b0 G
0'
#123
b1001110 %
b1001110 +
b1001110 H
b1001110 7
b11111111111111111001100011111111 1
b111 5
1'
#124
b111 /
b11111111000110011001100011111111 1
b0 2
b0 &
b0 .
b0 >
b0 A
b1111111100011001 "
b1111111100011001 *
b1111111100011001 @
b1111111100011001 D
0'
#125
1'
#126
bz 5
bz /
b1001110 &
b1001110 .
b1001110 >
b1001110 A
b11 !
b11 )
b11 ?
bz "
bz *
bz @
bz D
b11 C
0'
#127
b11 5
1'
#128
bx11 !
bx11 )
bx11 ?
b111 /
b1001100011111111 "
b1001100011111111 *
b1001100011111111 @
b1001100011111111 0
b0 &
b0 .
b0 >
b0 A
0'
#129
1'
#130
b1001110 &
b1001110 .
b1001110 >
b1001110 A
b1001100011111111 F
b1001100011111111 G
b111 !
b111 )
b111 ?
bz C
0'
#131
1'
#132
b1111111100011001 "
b1111111100011001 *
b1111111100011001 @
b1111111100011001 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#133
1'
#134
bz 5
bz "
bz *
bz @
bz 0
bz /
b1110 &
b1110 .
b1110 >
b1110 A
b11 !
b11 )
b11 ?
b11 C
b11100000 B
b11111111000110011001100011111111 F
b1111111100011001 G
0'
#135
b0 4
b1110 %
b1110 +
b1110 H
b1110 7
b11 5
1'
#136
b10 $
b10 ,
b10 I
b10 8
b0 2
b0 &
b0 .
b0 >
b0 A
0'
#137
b10 L
b111100001111 #
b111100001111 -
b111100001111 J
b111100001111 K
1'
#138
b111100001111 :
b0 <
bz !
bz )
bz ?
bz C
0'
#139
b100 L
b1111000011110000 #
b1111000011110000 -
b1111000011110000 J
b1111000011110000 K
1'
#140
b11110000111100000000111100001111 :
b1 <
0'
#141
b110 L
b1111111111111111 #
b1111111111111111 -
b1111111111111111 J
b1111111111111111 K
1'
#142
b111111111111111111110000111100000000111100001111 :
b10 <
0'
#143
b1000 L
1'
#144
b1111111111111111111111111111111111110000111100000000111100001111 :
b11 <
0'
#145
b1010 L
1'
#146
b11111111111111111111111111111111111111111111111111110000111100000000111100001111 :
b100 <
0'
#147
b1100 L
1'
#148
b111111111111111111111111111111111111111111111111111111111111111111110000111100000000111100001111 :
b101 <
0'
#149
b1110 L
1'
#150
b1111111111111111111111111111111111111111111111111111111111111111111111111111111111110000111100000000111100001111 :
b110 <
0'
#151
b0 L
b0 #
b0 -
b0 J
b0 K
1'
#152
b111 <
0'
#153
b10 L
b111100001111 #
b111100001111 -
b111100001111 J
b111100001111 K
1'
#154
b101110 %
b101110 +
b101110 H
b101110 7
b11 $
b11 ,
b11 I
b11 8
b1000 <
0'
#155
bz #
bz -
bz J
bz K
1'
#156
b0 O
b111111110000 #
b111111110000 -
b111111110000 J
b111111110000 9
b0 =
0'
#157
1'
#158
b1 O
b1111111111111111 #
b1111111111111111 -
b1111111111111111 J
b1111111111111111 9
b1 =
0'
#159
1'
#160
b10 O
b10 =
0'
#161
1'
#162
b11 O
b11 =
0'
#163
1'
#164
b100 O
b100 =
0'
#165
1'
#166
b101 O
b101 =
0'
#167
1'
#168
b110 O
b110 =
0'
#169
1'
#170
b111 O
b0 #
b0 -
b0 J
b0 9
b111 =
0'
#171
1'
#172
b1000 O
b111 !
b111 )
b111 ?
b111 /
b111100001111 "
b111100001111 *
b111100001111 @
b111100001111 0
16
bz #
bz -
bz J
bz 9
b0 $
b0 ,
b0 I
b0 8
b1000 =
0'
#173
b0 L
1'
#174
b1110 &
b1110 .
b1110 >
b1110 A
b11111111000110010000111100001111 F
b111100001111 G
0'
#175
1'
#176
b1111000011110000 "
b1111000011110000 *
b1111000011110000 @
b1111000011110000 0
b10 2
b0 &
b0 .
b0 >
b0 A
0'
#177
1'
#178
bz 5
bz "
bz *
bz @
bz 0
bz !
bz )
bz ?
bz /
b11110000111100000000111100001111 F
b1111000011110000 G
0'
